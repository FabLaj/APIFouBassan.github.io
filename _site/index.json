{
  "api/APIFouBassan.Controllers.FouBassanController.html": {
    "href": "api/APIFouBassan.Controllers.FouBassanController.html",
    "title": "Class FouBassanController | Documentation API ESP",
    "keywords": "Class FouBassanController Namespace APIFouBassan.Controllers Assembly APIFouBassan.dll C'est le controller de mon API, il fait les int√©ractions concernant les fou de bassan [ApiController] public class FouBassanController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller FouBassanController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FouBassanController(EspDbContext) Constructeur du fou de bassan pour faire la liaison vers la base de donn√©es public FouBassanController(EspDbContext bd) Parameters bd EspDbContext Methods Delete(string) M√©thode pour enlever une donn√©e sur la base de donn√©es. Il va prendre le tag de l'oiseau et enlever toutes les donn√©es concernant cet oiseau [HttpDelete(\"{tag}\")] [ProducesResponseType(202, Type = typeof(AcceptedResult))] [ProducesResponseType(400, Type = typeof(BadRequestResult))] public IActionResult Delete(string tag) Parameters tag string Returns IActionResult Get(string, DateTime, DateTime) M√©thode qui sert √† aller chercher les donn√©es voulu pour faire l'affichage [HttpGet(\"{tag}\")] [ProducesResponseType(202, Type = typeof(FouBassanDTO))] [ProducesResponseType(400, Type = typeof(BadRequestResult))] public IActionResult Get(string tag, DateTime dateDebut, DateTime dateFin) Parameters tag string Prends le tag de l'oiseau qu'on veut r√©cup√©rer dateDebut DateTime Prends la date et heure de d√©but du rescencement, maximum de 5h dateFin DateTime Prend la date et l'heure de fin du rescencement, maximum de 5h Returns IActionResult Retourne un objet FouBassanDTO, qui poss√®de une liste de position et une liste de profondeurs entre les temps demand√©s Post(PositionTempsDTO) M√©thode pour publier les donn√©es de position sur la base de donn√©e, il va cr√©er un nouveau fou si le tag n'existe pas, et il va donner sa valeur de position sur le temps, ainsi que sa valeur de temp√©rature. [HttpPost] [Route(\"ajouterPosition\")] [ProducesResponseType(201, Type = typeof(PositionTemps))] [ProducesResponseType(400, Type = typeof(BadRequestResult))] [ProducesResponseType(409, Type = typeof(ConflictResult))] public IActionResult Post(PositionTempsDTO position) Parameters position PositionTempsDTO Prends un objet PositionTempsDTO pour directement l'envoyer dans la base de donn√©es Returns IActionResult Retourne un succ√®s s'il r√©ussi √† installer les donn√©es sur la base de donn√©es, sinon il va indiquer s'il y a un conflit, ou s'il n'a pas r√©ussi √† mettre la donn√©e Post(ProfondeurTempsDTO) C'est une m√©thode qui permet d'ajouter une donn√©e de profondeur sur la base de donn√©e. Il va cr√©er un nouveau fou si le tag inscrit n'existe pas, et il va lui donner sa valeur de profondeur sur le temps, ainsi que son comportement. [HttpPost] [Route(\"ajouterProfondeur\")] [ProducesResponseType(201, Type = typeof(ProfondeurTemps))] [ProducesResponseType(400, Type = typeof(BadRequestResult))] [ProducesResponseType(409, Type = typeof(ConflictResult))] public IActionResult Post(ProfondeurTempsDTO profondeur) Parameters profondeur ProfondeurTempsDTO Prends un objet ProfondeurTempsDTO pour que ce soit plus simple entrer les donn√©es Returns IActionResult Retourne un succ√®s s'il r√©ussi √† installer les donn√©es sur la base de donn√©es, sinon il va indiquer s'il y a un conflit, ou s'il n'a tout simplement pas r√©ussi √† mettre les donn√©es"
  },
  "api/APIFouBassan.Controllers.html": {
    "href": "api/APIFouBassan.Controllers.html",
    "title": "Namespace APIFouBassan.Controllers | Documentation API ESP",
    "keywords": "Namespace APIFouBassan.Controllers Classes FouBassanController C'est le controller de mon API, il fait les int√©ractions concernant les fou de bassan"
  },
  "api/APIFouBassan.Models.EspDbContext.html": {
    "href": "api/APIFouBassan.Models.EspDbContext.html",
    "title": "Class EspDbContext | Documentation API ESP",
    "keywords": "Class EspDbContext Namespace APIFouBassan.Models Assembly APIFouBassan.dll C'est la classe qui s'occupe de faire le liens entre l'API et la base de donn√©e public class EspDbContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext EspDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EspDbContext() Constructeur vide pour cr√©er un nouveau DbContext avec les valeurs par d√©faut public EspDbContext() EspDbContext(DbContextOptions<EspDbContext>) Constructeur qui prend des options en param√®tres, pour plus de configuration public EspDbContext(DbContextOptions<EspDbContext> options) Parameters options DbContextOptions<EspDbContext> EspDbContext(string) Constructeur avec la chaine de connection en entr√©e, pour vouloir changer la chaine de connection si on change de base de donn√©es public EspDbContext(string connectionString) Parameters connectionString string Properties FouBassan Liste des fous de bassan public virtual DbSet<FouBassan> FouBassan { get; set; } Property Value DbSet<FouBassan> PositionTemps Liste des positions sur le temps public virtual DbSet<PositionTemps> PositionTemps { get; set; } Property Value DbSet<PositionTemps> ProfondeurTemps Liste des profondeurs sur le temps public virtual DbSet<ProfondeurTemps> ProfondeurTemps { get; set; } Property Value DbSet<ProfondeurTemps> Methods OnConfiguring(DbContextOptionsBuilder) protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) Parameters optionsBuilder DbContextOptionsBuilder OnModelCreating(ModelBuilder) protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder"
  },
  "api/APIFouBassan.Models.FouBassan.html": {
    "href": "api/APIFouBassan.Models.FouBassan.html",
    "title": "Class FouBassan | Documentation API ESP",
    "keywords": "Class FouBassan Namespace APIFouBassan.Models Assembly APIFouBassan.dll C'est la classe qui fait les liens vers les autres informations du fou de bassan, la classe m√®re public class FouBassan Inheritance object FouBassan Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FouBassan() Constructeur vide pour cr√©er un nouvel objet avec les valeurs par d√©faut public FouBassan() FouBassan(string) Constructeur de fou de bassan en lui donnant un tag pr√©cis. public FouBassan(string tag) Parameters tag string Properties Id L'id du fou de bassan, √ßa sert pour faire les liens entre les objets, il est auto-incr√©mental public int Id { get; set; } Property Value int PositionTemps Un pointeur vers sa liste de positions public virtual ICollection<PositionTemps> PositionTemps { get; set; } Property Value ICollection<PositionTemps> ProfondeurTemps Un pointeur vers sa liste de profondeurs public virtual ICollection<ProfondeurTemps> ProfondeurTemps { get; set; } Property Value ICollection<ProfondeurTemps> Tag C'est l'ID de l'oiseau, est en format texte public string? Tag { get; set; } Property Value string"
  },
  "api/APIFouBassan.Models.FouBassanDTO.html": {
    "href": "api/APIFouBassan.Models.FouBassanDTO.html",
    "title": "Class FouBassanDTO | Documentation API ESP",
    "keywords": "Class FouBassanDTO Namespace APIFouBassan.Models Assembly APIFouBassan.dll Ici c'est un Data Transfer Object (DTO) de la classe FouBassan, elle sert √† initialiser une classe qui va servir seulement pour le d√©placement de l'objet, c'est cette classe qui va √™tre utilis√© pour l'affichage des donn√©es public class FouBassanDTO Inheritance object FouBassanDTO Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FouBassanDTO(List<PositionTempsDTO>, List<ProfondeurTempsDTO>) Constructeur du DTO, il prend la liste des positions et la liste des profondeurs pour se cr√©er public FouBassanDTO(List<PositionTempsDTO> positionTempsDTOs, List<ProfondeurTempsDTO> profondeurTempsDTOs) Parameters positionTempsDTOs List<PositionTempsDTO> profondeurTempsDTOs List<ProfondeurTempsDTO> Properties PositionTemps C'est une liste qui contient plusieurs PositionTemps sur son format de DTO, √ßa sert pour l'affichage des donn√©es de position public List<PositionTempsDTO> PositionTemps { get; set; } Property Value List<PositionTempsDTO> ProfondeurTemps C'est une liste qui contient plusieurs ProfondeurTemps sur son format de DTO, √ßa sert pour l'affichage des donn√©es de profondeur public List<ProfondeurTempsDTO> ProfondeurTemps { get; set; } Property Value List<ProfondeurTempsDTO>"
  },
  "api/APIFouBassan.Models.PositionTemps.html": {
    "href": "api/APIFouBassan.Models.PositionTemps.html",
    "title": "Class PositionTemps | Documentation API ESP",
    "keywords": "Class PositionTemps Namespace APIFouBassan.Models Assembly APIFouBassan.dll C'est la classe qui prends les donn√©es n√©cessaire pour la position, ainsi que le comportement de l'oiseau sur le moment public class PositionTemps Inheritance object PositionTemps Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PositionTemps() Constructeur vide qui sert pour instancier un nouvel objet avec les valeurs par d√©faut public PositionTemps() PositionTemps(PositionTempsDTO, FouBassan) Constructeur qui prends le DTO en entr√©e et le fou de bassan pour cr√©er public PositionTemps(PositionTempsDTO dto, FouBassan nav) Parameters dto PositionTempsDTO nav FouBassan Properties Comportement Le comportement de l'oiseau, s'il est √† la colonie, en voyage, √† la p√™che ou en d√©rive, peut √™tre null public string? Comportement { get; set; } Property Value string Date Param√®tre sur le format AAAA-MM-JJTHH:mm:ss.sssZ, o√π T s√©pare le jour du temps et Z pour Zero timezone public DateTime Date { get; set; } Property Value DateTime Id Id de l'objet, est auto-incr√©mental donc il s'occupe lui m√™me de sa valeur. Sert pour aller chercher des donn√©es et comparer des valeurs. public int Id { get; set; } Property Value int IdFouBassan C'est l'ID qui pointe vers le fou de bassan public int IdFouBassan { get; set; } Property Value int IdFouBassanNavigation C'est l'objet qui fait la navigation vers le fou de bassan de la donn√©e public virtual FouBassan? IdFouBassanNavigation { get; set; } Property Value FouBassan Latitude Donn√©e de latitude, peut √™tre null public double? Latitude { get; set; } Property Value double? Longitude Donn√©e de longitude, peut √™tre null public double? Longitude { get; set; } Property Value double? Tag C'est l'ID de l'oiseau, est en format texte public string Tag { get; set; } Property Value string"
  },
  "api/APIFouBassan.Models.PositionTempsDTO.html": {
    "href": "api/APIFouBassan.Models.PositionTempsDTO.html",
    "title": "Class PositionTempsDTO | Documentation API ESP",
    "keywords": "Class PositionTempsDTO Namespace APIFouBassan.Models Assembly APIFouBassan.dll Ici c'est un Data Transfer Object (DTO) de la classe PositionTemps, elle sert √† initialiser une classe qui va servir seulement pour le d√©placement de l'objet public class PositionTempsDTO Inheritance object PositionTempsDTO Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PositionTempsDTO(DateTime, double?, double?, string?, string) Le constructeur du DTO, il prend les param√®tres en entr√©e n√©cessaire pour construire l'objet public PositionTempsDTO(DateTime date, double? latitude, double? longitude, string? comportement, string tag) Parameters date DateTime latitude double? longitude double? comportement string tag string Properties Comportement Le comportement de l'oiseau, s'il est √† la colonie, en voyage, √† la p√™che ou en d√©rive, peut √™tre null public string? Comportement { get; set; } Property Value string Date Param√®tre sur le format AAAA-MM-JJTHH:mm:ss.sssZ, o√π T s√©pare le jour du temps et Z pour Zero timezone public DateTime Date { get; set; } Property Value DateTime Latitude Donn√©e de latitude, peut √™tre null public double? Latitude { get; set; } Property Value double? Longitude Donn√©e de longitude, peut √™tre null public double? Longitude { get; set; } Property Value double? Tag C'est l'ID de l'oiseau, est en format texte public string Tag { get; set; } Property Value string"
  },
  "api/APIFouBassan.Models.ProfondeurTemps.html": {
    "href": "api/APIFouBassan.Models.ProfondeurTemps.html",
    "title": "Class ProfondeurTemps | Documentation API ESP",
    "keywords": "Class ProfondeurTemps Namespace APIFouBassan.Models Assembly APIFouBassan.dll C'est la classe qui sert √† enregistrer les donn√©es de profondeur de l'oiseau public class ProfondeurTemps Inheritance object ProfondeurTemps Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProfondeurTemps() Constructeur vide, pour instancier une nouvelle classe avec les donn√©es par d√©faut public ProfondeurTemps() ProfondeurTemps(ProfondeurTempsDTO, FouBassan) Constructeur avec l'objet DTO en param√®tre et avec le fou de bassan de navigation public ProfondeurTemps(ProfondeurTempsDTO dto, FouBassan nav) Parameters dto ProfondeurTempsDTO nav FouBassan Properties Date Param√®tre sur le format AAAA-MM-JJTHH:mm:ss.sssZ, o√π T s√©pare le jour du temps et Z pour Zero timezone public DateTime Date { get; set; } Property Value DateTime Id Id de l'objet, est auto-incr√©mental donc il s'occupe lui m√™me de sa valeur. Sert pour aller chercher des donn√©es et comparer des valeurs. public int Id { get; set; } Property Value int IdFouBassan C'est l'ID qui pointe vers le fou de bassan public int IdFouBassan { get; set; } Property Value int IdFouBassanNavigation C'est l'objet qui fait la navigation vers le fou de bassan de la donn√©e public virtual FouBassan IdFouBassanNavigation { get; set; } Property Value FouBassan Profondeur Donn√©e de profondeur, peut √™tre null. Est en m√®tres public double? Profondeur { get; set; } Property Value double? Tag C'est l'ID de l'oiseau, est en format texte public string Tag { get; set; } Property Value string Temperature Donn√©e de temp√©rature de la position actuelle. Est en degr√© Celcius et peut √™tre null public double? Temperature { get; set; } Property Value double?"
  },
  "api/APIFouBassan.Models.ProfondeurTempsDTO.html": {
    "href": "api/APIFouBassan.Models.ProfondeurTempsDTO.html",
    "title": "Class ProfondeurTempsDTO | Documentation API ESP",
    "keywords": "Class ProfondeurTempsDTO Namespace APIFouBassan.Models Assembly APIFouBassan.dll Ici c'est un Data Transfer Object (DTO) de la classe profondeur, elle sert √† initialiser une classe qui va servir seulement pour le d√©placement de l'objet public class ProfondeurTempsDTO Inheritance object ProfondeurTempsDTO Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProfondeurTempsDTO(DateTime, double?, double?, string) Le constructeur du DTO, elle va √™tre appel√© lorsqu'on veut construire un nouvel objet ProfondeurTempsDTO public ProfondeurTempsDTO(DateTime date, double? profondeur, double? temperature, string tag) Parameters date DateTime profondeur double? temperature double? tag string Properties Date Param√®tre sur le format AAAA-MM-JJTHH:mm:ss.sssZ, o√π T s√©pare le jour du temps et Z pour Zero timezone public DateTime Date { get; set; } Property Value DateTime Profondeur Donn√©e de profondeur, peut √™tre null. Est en m√®tres public double? Profondeur { get; set; } Property Value double? Tag C'est l'ID de l'oiseau, est en format texte public string Tag { get; set; } Property Value string Temperature Donn√©e de temp√©rature de la position actuelle. Est en degr√© Celcius et peut √™tre null public double? Temperature { get; set; } Property Value double?"
  },
  "api/APIFouBassan.Models.html": {
    "href": "api/APIFouBassan.Models.html",
    "title": "Namespace APIFouBassan.Models | Documentation API ESP",
    "keywords": "Namespace APIFouBassan.Models Classes EspDbContext C'est la classe qui s'occupe de faire le liens entre l'API et la base de donn√©e FouBassan C'est la classe qui fait les liens vers les autres informations du fou de bassan, la classe m√®re FouBassanDTO Ici c'est un Data Transfer Object (DTO) de la classe FouBassan, elle sert √† initialiser une classe qui va servir seulement pour le d√©placement de l'objet, c'est cette classe qui va √™tre utilis√© pour l'affichage des donn√©es PositionTemps C'est la classe qui prends les donn√©es n√©cessaire pour la position, ainsi que le comportement de l'oiseau sur le moment PositionTempsDTO Ici c'est un Data Transfer Object (DTO) de la classe PositionTemps, elle sert √† initialiser une classe qui va servir seulement pour le d√©placement de l'objet ProfondeurTemps C'est la classe qui sert √† enregistrer les donn√©es de profondeur de l'oiseau ProfondeurTempsDTO Ici c'est un Data Transfer Object (DTO) de la classe profondeur, elle sert √† initialiser une classe qui va servir seulement pour le d√©placement de l'objet"
  },
  "api/APIFouBassan.Program.html": {
    "href": "api/APIFouBassan.Program.html",
    "title": "Class Program | Documentation API ESP",
    "keywords": "Class Program Namespace APIFouBassan Assembly APIFouBassan.dll La classe du programme, le d√©but de tout public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Main(string[]) M√©thode qui va appeler le code entier, c'est par ici que le programme de l'API commence public static void Main(string[] args) Parameters args string[] Les arguments d'entr√©es pour le Main"
  },
  "api/APIFouBassan.html": {
    "href": "api/APIFouBassan.html",
    "title": "Namespace APIFouBassan | Documentation API ESP",
    "keywords": "Namespace APIFouBassan Classes Program La classe du programme, le d√©but de tout"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | Documentation API ESP",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | Documentation API ESP",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Documentation API ESP",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}